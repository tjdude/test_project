{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOf/4434ZlyblhYjvjGG9X6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tjdude/test_project/blob/main/samsung%20%EC%A3%BC%EA%B0%80%EC%98%88%EC%B8%A1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "JAdm4PDbX6SF"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import warnings\n",
        "import os\n",
        "\n",
        "%matplotlib inline\n",
        "warnings.filterwarnings('ignore')\n",
        "plt.rcParams['figure.figsize'] = (15, 20)\n",
        "\n",
        "plt.rcParams['font.family'] = 'NanumGothic'"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install finance-datareader"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ITHqvpZlX_4h",
        "outputId": "bdebe2b1-f140-43d1-c06c-f6e1f685f451"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting finance-datareader\n",
            "  Downloading finance_datareader-0.9.34-py3-none-any.whl (17 kB)\n",
            "Requirement already satisfied: pandas>=0.19.2 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (1.3.5)\n",
            "Requirement already satisfied: requests>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (2.23.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.64.0)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from finance-datareader) (4.2.6)\n",
            "Collecting requests-file\n",
            "  Downloading requests_file-1.5.1-py2.py3-none-any.whl (3.7 kB)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (1.21.6)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19.2->finance-datareader) (2022.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19.2->finance-datareader) (1.15.0)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2.10)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.3.0->finance-datareader) (2022.6.15)\n",
            "Installing collected packages: requests-file, finance-datareader\n",
            "Successfully installed finance-datareader-0.9.34 requests-file-1.5.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import FinanceDataReader as fdr"
      ],
      "metadata": {
        "id": "OZSs4YmKYAF4"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "samsung = fdr.DataReader('005930')"
      ],
      "metadata": {
        "id": "YVynMQXMYAHo"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ford = fdr.DataReader('F', '1980-01-01', '2020-12-30')"
      ],
      "metadata": {
        "id": "X96a1a0gZBzJ"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "STOCK_CODE = '005930'"
      ],
      "metadata": {
        "id": "NOlfYJg7ZB82"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "stock = fdr.DataReader(STOCK_CODE)"
      ],
      "metadata": {
        "id": "2Rc0LkJSZCCt"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "stock.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "yDV0Y2mdZCE8",
        "outputId": "2f314f5e-39c6-42cf-d2aa-478e0ac1346a"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Open  High   Low  Close  Volume    Change\n",
              "Date                                                 \n",
              "1998-05-11  1215  1221  1191   1192  195520       NaN\n",
              "1998-05-12  1182  1200  1156   1177  243650 -0.012584\n",
              "1998-05-13  1163  1219  1148   1205  359030  0.023789\n",
              "1998-05-14  1202  1288  1191   1221  308030  0.013278\n",
              "1998-05-15  1221  1264  1219   1229  231700  0.006552"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-71cb2018-962b-47e2-a61c-331014042314\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Change</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1998-05-11</th>\n",
              "      <td>1215</td>\n",
              "      <td>1221</td>\n",
              "      <td>1191</td>\n",
              "      <td>1192</td>\n",
              "      <td>195520</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998-05-12</th>\n",
              "      <td>1182</td>\n",
              "      <td>1200</td>\n",
              "      <td>1156</td>\n",
              "      <td>1177</td>\n",
              "      <td>243650</td>\n",
              "      <td>-0.012584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998-05-13</th>\n",
              "      <td>1163</td>\n",
              "      <td>1219</td>\n",
              "      <td>1148</td>\n",
              "      <td>1205</td>\n",
              "      <td>359030</td>\n",
              "      <td>0.023789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998-05-14</th>\n",
              "      <td>1202</td>\n",
              "      <td>1288</td>\n",
              "      <td>1191</td>\n",
              "      <td>1221</td>\n",
              "      <td>308030</td>\n",
              "      <td>0.013278</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1998-05-15</th>\n",
              "      <td>1221</td>\n",
              "      <td>1264</td>\n",
              "      <td>1219</td>\n",
              "      <td>1229</td>\n",
              "      <td>231700</td>\n",
              "      <td>0.006552</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71cb2018-962b-47e2-a61c-331014042314')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-71cb2018-962b-47e2-a61c-331014042314 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-71cb2018-962b-47e2-a61c-331014042314');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stock['Year'] = stock.index.year\n",
        "stock['Month'] = stock.index.month\n",
        "stock['Day'] = stock.index.day"
      ],
      "metadata": {
        "id": "GLsteZCtie3g"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(16, 9))\n",
        "sns.lineplot(y=stock['Close'], x=stock.index)\n",
        "plt.xlabel('time')\n",
        "plt.ylabel('price')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 386
        },
        "id": "NRRY8eJZie6p",
        "outputId": "f8d9d79d-7236-4ebe-9070-618ce2f77653"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'price')"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "time_steps = [['1980', '1990'],\n",
        "              ['1990', '2000'], \n",
        "              ['2000', '2010'], \n",
        "              ['2010', '2020']]\n",
        "\n",
        "fig, axes = plt.subplots(2, 2)\n",
        "fig.set_size_inches(16, 9)\n",
        "for i in range(4):\n",
        "    ax = axes[i//2, i%2]\n",
        "    df = stock.loc[(stock.index > time_steps[i][0]) & (stock.index < time_steps[i][1])]\n",
        "    sns.lineplot(y=df['Close'], x=df.index, ax=ax) \n",
        "    ax.set_title(f'{time_steps[i][0]}~{time_steps[i][1]}')\n",
        "    ax.set_xlabel('time')\n",
        "    ax.set_ylabel('price')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "id": "6ATbmPaQiqEV",
        "outputId": "a05327f5-9ee0-493e-fa71-1802773e4867"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x648 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "x_train, x_test, y_train, y_test = train_test_split(df.drop('Close', 1), df['Close'], test_size=0.2, random_state=0, shuffle=False)\n",
        "\n",
        "x_train.shape, y_train.shape\n",
        "\n",
        "x_test.shape, y_test.shape\n",
        "\n",
        "x_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "8vOIHilrjAHo",
        "outputId": "7031d025-603f-4cc1-8552-899aa4987ee0"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Open   High    Low  Volume    Change  Year  Month  Day\n",
              "Date                                                               \n",
              "2010-01-04  16060  16180  16000  239271  0.012516  2010      1    4\n",
              "2010-01-05  16520  16580  16300  559219  0.016069  2010      1    5\n",
              "2010-01-06  16580  16820  16520  459755  0.023114  2010      1    6\n",
              "2010-01-07  16820  16820  16260  443237 -0.033294  2010      1    7\n",
              "2010-01-08  16400  16420  16120  295798  0.009840  2010      1    8\n",
              "...           ...    ...    ...     ...       ...   ...    ...  ...\n",
              "2017-12-15  51240  51480  50520  298571 -0.008617  2017     12   15\n",
              "2017-12-18  50620  51240  50620  147005  0.011458  2017     12   18\n",
              "2017-12-19  51540  52080  51520  239572  0.007031  2017     12   19\n",
              "2017-12-20  51500  51760  50820  201611 -0.013189  2017     12   20\n",
              "2017-12-21  51000  51060  49100  312486 -0.034198  2017     12   21\n",
              "\n",
              "[1972 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e89495f-5ee2-47d0-82cf-0899d98ac8c9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Change</th>\n",
              "      <th>Year</th>\n",
              "      <th>Month</th>\n",
              "      <th>Day</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2010-01-04</th>\n",
              "      <td>16060</td>\n",
              "      <td>16180</td>\n",
              "      <td>16000</td>\n",
              "      <td>239271</td>\n",
              "      <td>0.012516</td>\n",
              "      <td>2010</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2010-01-05</th>\n",
              "      <td>16520</td>\n",
              "      <td>16580</td>\n",
              "      <td>16300</td>\n",
              "      <td>559219</td>\n",
              "      <td>0.016069</td>\n",
              "      <td>2010</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2010-01-06</th>\n",
              "      <td>16580</td>\n",
              "      <td>16820</td>\n",
              "      <td>16520</td>\n",
              "      <td>459755</td>\n",
              "      <td>0.023114</td>\n",
              "      <td>2010</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2010-01-07</th>\n",
              "      <td>16820</td>\n",
              "      <td>16820</td>\n",
              "      <td>16260</td>\n",
              "      <td>443237</td>\n",
              "      <td>-0.033294</td>\n",
              "      <td>2010</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2010-01-08</th>\n",
              "      <td>16400</td>\n",
              "      <td>16420</td>\n",
              "      <td>16120</td>\n",
              "      <td>295798</td>\n",
              "      <td>0.009840</td>\n",
              "      <td>2010</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-15</th>\n",
              "      <td>51240</td>\n",
              "      <td>51480</td>\n",
              "      <td>50520</td>\n",
              "      <td>298571</td>\n",
              "      <td>-0.008617</td>\n",
              "      <td>2017</td>\n",
              "      <td>12</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-18</th>\n",
              "      <td>50620</td>\n",
              "      <td>51240</td>\n",
              "      <td>50620</td>\n",
              "      <td>147005</td>\n",
              "      <td>0.011458</td>\n",
              "      <td>2017</td>\n",
              "      <td>12</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-19</th>\n",
              "      <td>51540</td>\n",
              "      <td>52080</td>\n",
              "      <td>51520</td>\n",
              "      <td>239572</td>\n",
              "      <td>0.007031</td>\n",
              "      <td>2017</td>\n",
              "      <td>12</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-20</th>\n",
              "      <td>51500</td>\n",
              "      <td>51760</td>\n",
              "      <td>50820</td>\n",
              "      <td>201611</td>\n",
              "      <td>-0.013189</td>\n",
              "      <td>2017</td>\n",
              "      <td>12</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-21</th>\n",
              "      <td>51000</td>\n",
              "      <td>51060</td>\n",
              "      <td>49100</td>\n",
              "      <td>312486</td>\n",
              "      <td>-0.034198</td>\n",
              "      <td>2017</td>\n",
              "      <td>12</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1972 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e89495f-5ee2-47d0-82cf-0899d98ac8c9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8e89495f-5ee2-47d0-82cf-0899d98ac8c9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8e89495f-5ee2-47d0-82cf-0899d98ac8c9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "\n",
        "def windowed_dataset(series, window_size, batch_size, shuffle):\n",
        "    series = tf.expand_dims(series, axis=-1)\n",
        "    ds = tf.data.Dataset.from_tensor_slices(series)\n",
        "    ds = ds.window(window_size + 1, shift=1, drop_remainder=True)\n",
        "    ds = ds.flat_map(lambda w: w.batch(window_size + 1))\n",
        "    if shuffle:\n",
        "        ds = ds.shuffle(1000)\n",
        "    ds = ds.map(lambda w: (w[:-1], w[-1]))\n",
        "    return ds.batch(batch_size).prefetch(1)"
      ],
      "metadata": {
        "id": "vOa8vmzwjAFb"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "frj3uKzflEZl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "WINDOW_SIZE=20\n",
        "BATCH_SIZE=32"
      ],
      "metadata": {
        "id": "D6WzBeDui_7U"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_data = windowed_dataset(y_train, WINDOW_SIZE, BATCH_SIZE, True)\n",
        "test_data = windowed_dataset(y_test, WINDOW_SIZE, BATCH_SIZE, False)"
      ],
      "metadata": {
        "id": "DLlYCpNwlKFy"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for data in train_data.take(1):\n",
        "    print(f'데이터셋(X) 구성(batch_size, window_size, feature갯수): {data[0].shape}')\n",
        "    print(f'데이터셋(Y) 구성(batch_size, window_size, feature갯수): {data[1].shape}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jmd9e0W4lKDF",
        "outputId": "a5de2022-972a-4487-a3c0-fb890a57e658"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "데이터셋(X) 구성(batch_size, window_size, feature갯수): (32, 20, 1)\n",
            "데이터셋(Y) 구성(batch_size, window_size, feature갯수): (32, 1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, LSTM, Conv1D, Lambda\n",
        "from tensorflow.keras.losses import Huber\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n",
        "\n",
        "\n",
        "model = Sequential([\n",
        "    Conv1D(filters=32, kernel_size=5,\n",
        "           padding=\"causal\",\n",
        "           activation=\"relu\",\n",
        "           input_shape=[WINDOW_SIZE, 1]),\n",
        "  \n",
        "    LSTM(16, activation='tanh'),\n",
        "    Dense(16, activation=\"relu\"),\n",
        "    Dense(1),\n",
        "])"
      ],
      "metadata": {
        "id": "0gWjLWcglJ8K"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "loss = Huber()\n",
        "optimizer = Adam(0.0005)\n",
        "model.compile(loss=Huber(), optimizer=optimizer, metrics=['mse'])"
      ],
      "metadata": {
        "id": "BtiZObKXlQh9"
      },
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "earlystopping = EarlyStopping(monitor='val_loss', patience=10)\n",
        "filename = os.path.join('tmp', 'ckeckpointer.ckpt')\n",
        "checkpoint = ModelCheckpoint(filename, \n",
        "                             save_weights_only=True, \n",
        "                             save_best_only=True, \n",
        "                             monitor='val_loss', \n",
        "                             verbose=1)"
      ],
      "metadata": {
        "id": "p9bQo8Bclbgf"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(train_data, \n",
        "                    validation_data=(test_data), \n",
        "                    epochs=50, \n",
        "                    callbacks=[checkpoint, earlystopping])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qf-3d2QmlbeZ",
        "outputId": "e257c21c-fe9a-454a-bd3a-cb842613fe8a"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "     61/Unknown - 3s 12ms/step - loss: 26845.0273 - mse: 800983552.0000\n",
            "Epoch 1: val_loss improved from inf to 46597.71875, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 4s 26ms/step - loss: 26845.0273 - mse: 800983552.0000 - val_loss: 46597.7188 - val_mse: 2184478464.0000\n",
            "Epoch 2/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26821.0117 - mse: 799158336.0000\n",
            "Epoch 2: val_loss improved from 46597.71875 to 46597.45703, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 17ms/step - loss: 26844.7480 - mse: 800968896.0000 - val_loss: 46597.4570 - val_mse: 2184453632.0000\n",
            "Epoch 3/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26809.8730 - mse: 799309696.0000\n",
            "Epoch 3: val_loss improved from 46597.45703 to 46597.19141, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 27ms/step - loss: 26844.4844 - mse: 800955008.0000 - val_loss: 46597.1914 - val_mse: 2184429056.0000\n",
            "Epoch 4/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26738.8887 - mse: 794072192.0000\n",
            "Epoch 4: val_loss improved from 46597.19141 to 46596.90234, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 26ms/step - loss: 26844.2188 - mse: 800940160.0000 - val_loss: 46596.9023 - val_mse: 2184402688.0000\n",
            "Epoch 5/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26830.7168 - mse: 800027840.0000\n",
            "Epoch 5: val_loss improved from 46596.90234 to 46596.58984, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 26843.9199 - mse: 800924160.0000 - val_loss: 46596.5898 - val_mse: 2184372992.0000\n",
            "Epoch 6/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26802.0059 - mse: 797473664.0000\n",
            "Epoch 6: val_loss improved from 46596.58984 to 46596.25391, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 25ms/step - loss: 26843.5938 - mse: 800906368.0000 - val_loss: 46596.2539 - val_mse: 2184341248.0000\n",
            "Epoch 7/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26727.2969 - mse: 792250560.0000\n",
            "Epoch 7: val_loss improved from 46596.25391 to 46595.87891, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 28ms/step - loss: 26843.2266 - mse: 800886912.0000 - val_loss: 46595.8789 - val_mse: 2184305664.0000\n",
            "Epoch 8/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26765.5977 - mse: 796067136.0000\n",
            "Epoch 8: val_loss improved from 46595.87891 to 46595.45703, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 2s 29ms/step - loss: 26842.8320 - mse: 800865856.0000 - val_loss: 46595.4570 - val_mse: 2184267264.0000\n",
            "Epoch 9/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26842.4023 - mse: 800842560.0000\n",
            "Epoch 9: val_loss improved from 46595.45703 to 46595.00000, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26842.4023 - mse: 800842560.0000 - val_loss: 46595.0000 - val_mse: 2184225024.0000\n",
            "Epoch 10/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26658.9629 - mse: 788627072.0000\n",
            "Epoch 10: val_loss improved from 46595.00000 to 46594.51953, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26841.9336 - mse: 800817088.0000 - val_loss: 46594.5195 - val_mse: 2184179456.0000\n",
            "Epoch 11/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26841.4199 - mse: 800789632.0000\n",
            "Epoch 11: val_loss improved from 46594.51953 to 46593.98438, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26841.4199 - mse: 800789632.0000 - val_loss: 46593.9844 - val_mse: 2184130048.0000\n",
            "Epoch 12/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26776.8379 - mse: 796058368.0000\n",
            "Epoch 12: val_loss improved from 46593.98438 to 46593.42188, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26840.8730 - mse: 800760064.0000 - val_loss: 46593.4219 - val_mse: 2184077312.0000\n",
            "Epoch 13/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26842.3418 - mse: 800915904.0000\n",
            "Epoch 13: val_loss improved from 46593.42188 to 46592.81250, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26840.2832 - mse: 800728448.0000 - val_loss: 46592.8125 - val_mse: 2184020736.0000\n",
            "Epoch 14/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26784.1270 - mse: 796490176.0000\n",
            "Epoch 14: val_loss improved from 46592.81250 to 46592.17188, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26839.6621 - mse: 800694784.0000 - val_loss: 46592.1719 - val_mse: 2183960832.0000\n",
            "Epoch 15/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26538.2695 - mse: 780800704.0000\n",
            "Epoch 15: val_loss improved from 46592.17188 to 46591.48438, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26839.0000 - mse: 800659392.0000 - val_loss: 46591.4844 - val_mse: 2183897600.0000\n",
            "Epoch 16/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26587.6641 - mse: 784797312.0000\n",
            "Epoch 16: val_loss improved from 46591.48438 to 46590.77344, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26838.3027 - mse: 800622016.0000 - val_loss: 46590.7734 - val_mse: 2183830784.0000\n",
            "Epoch 17/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26788.4238 - mse: 798542016.0000\n",
            "Epoch 17: val_loss improved from 46590.77344 to 46590.02344, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26837.5703 - mse: 800582528.0000 - val_loss: 46590.0234 - val_mse: 2183760896.0000\n",
            "Epoch 18/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26774.5449 - mse: 796476224.0000\n",
            "Epoch 18: val_loss improved from 46590.02344 to 46589.23047, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 13ms/step - loss: 26836.7969 - mse: 800541376.0000 - val_loss: 46589.2305 - val_mse: 2183687680.0000\n",
            "Epoch 19/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26835.9941 - mse: 800497920.0000\n",
            "Epoch 19: val_loss improved from 46589.23047 to 46588.41016, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26835.9941 - mse: 800497920.0000 - val_loss: 46588.4102 - val_mse: 2183610880.0000\n",
            "Epoch 20/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26807.8105 - mse: 798764288.0000\n",
            "Epoch 20: val_loss improved from 46588.41016 to 46587.56250, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26835.1562 - mse: 800452992.0000 - val_loss: 46587.5625 - val_mse: 2183530752.0000\n",
            "Epoch 21/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26715.3887 - mse: 791932352.0000\n",
            "Epoch 21: val_loss improved from 46587.56250 to 46586.66016, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 16ms/step - loss: 26834.2832 - mse: 800406016.0000 - val_loss: 46586.6602 - val_mse: 2183448064.0000\n",
            "Epoch 22/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26634.1816 - mse: 787515840.0000\n",
            "Epoch 22: val_loss improved from 46586.66016 to 46585.73828, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26833.3770 - mse: 800357312.0000 - val_loss: 46585.7383 - val_mse: 2183362048.0000\n",
            "Epoch 23/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26820.7324 - mse: 799902592.0000\n",
            "Epoch 23: val_loss improved from 46585.73828 to 46584.78125, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26832.4434 - mse: 800306688.0000 - val_loss: 46584.7812 - val_mse: 2183272960.0000\n",
            "Epoch 24/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26831.4648 - mse: 800254592.0000\n",
            "Epoch 24: val_loss improved from 46584.78125 to 46583.79688, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26831.4648 - mse: 800254592.0000 - val_loss: 46583.7969 - val_mse: 2183180800.0000\n",
            "Epoch 25/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26641.8613 - mse: 787853184.0000\n",
            "Epoch 25: val_loss improved from 46583.79688 to 46582.77734, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26830.4590 - mse: 800200832.0000 - val_loss: 46582.7773 - val_mse: 2183086080.0000\n",
            "Epoch 26/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26565.7754 - mse: 782515776.0000\n",
            "Epoch 26: val_loss improved from 46582.77734 to 46581.72266, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26829.4277 - mse: 800145088.0000 - val_loss: 46581.7227 - val_mse: 2182988032.0000\n",
            "Epoch 27/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26828.3574 - mse: 800088128.0000\n",
            "Epoch 27: val_loss improved from 46581.72266 to 46580.64453, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26828.3574 - mse: 800088128.0000 - val_loss: 46580.6445 - val_mse: 2182887168.0000\n",
            "Epoch 28/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26837.5430 - mse: 800218816.0000\n",
            "Epoch 28: val_loss improved from 46580.64453 to 46579.52734, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26827.2617 - mse: 800029056.0000 - val_loss: 46579.5273 - val_mse: 2182783232.0000\n",
            "Epoch 29/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26629.8418 - mse: 787660992.0000\n",
            "Epoch 29: val_loss improved from 46579.52734 to 46578.39062, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26826.1348 - mse: 799968448.0000 - val_loss: 46578.3906 - val_mse: 2182677248.0000\n",
            "Epoch 30/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26772.1035 - mse: 796235840.0000\n",
            "Epoch 30: val_loss improved from 46578.39062 to 46577.21484, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26824.9824 - mse: 799906432.0000 - val_loss: 46577.2148 - val_mse: 2182567680.0000\n",
            "Epoch 31/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26683.4727 - mse: 790294336.0000\n",
            "Epoch 31: val_loss improved from 46577.21484 to 46576.01953, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26823.7930 - mse: 799842688.0000 - val_loss: 46576.0195 - val_mse: 2182456320.0000\n",
            "Epoch 32/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26782.2695 - mse: 796368960.0000\n",
            "Epoch 32: val_loss improved from 46576.01953 to 46574.78516, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 19ms/step - loss: 26822.5801 - mse: 799777728.0000 - val_loss: 46574.7852 - val_mse: 2182341632.0000\n",
            "Epoch 33/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26812.6270 - mse: 799946752.0000\n",
            "Epoch 33: val_loss improved from 46574.78516 to 46573.52734, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26821.3340 - mse: 799710656.0000 - val_loss: 46573.5273 - val_mse: 2182224384.0000\n",
            "Epoch 34/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26582.3379 - mse: 785606336.0000\n",
            "Epoch 34: val_loss improved from 46573.52734 to 46572.25391, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26820.0645 - mse: 799642496.0000 - val_loss: 46572.2539 - val_mse: 2182104832.0000\n",
            "Epoch 35/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26587.9727 - mse: 785391040.0000\n",
            "Epoch 35: val_loss improved from 46572.25391 to 46570.94141, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26818.7656 - mse: 799572608.0000 - val_loss: 46570.9414 - val_mse: 2181982464.0000\n",
            "Epoch 36/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26575.8984 - mse: 782268352.0000\n",
            "Epoch 36: val_loss improved from 46570.94141 to 46569.58984, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26817.4355 - mse: 799501760.0000 - val_loss: 46569.5898 - val_mse: 2181857792.0000\n",
            "Epoch 37/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26682.4414 - mse: 790863744.0000\n",
            "Epoch 37: val_loss improved from 46569.58984 to 46568.21875, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26816.0879 - mse: 799428992.0000 - val_loss: 46568.2188 - val_mse: 2181730816.0000\n",
            "Epoch 38/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26516.5254 - mse: 778530304.0000\n",
            "Epoch 38: val_loss improved from 46568.21875 to 46566.83203, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26814.7051 - mse: 799354944.0000 - val_loss: 46566.8320 - val_mse: 2181600512.0000\n",
            "Epoch 39/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26635.9707 - mse: 786872576.0000\n",
            "Epoch 39: val_loss improved from 46566.83203 to 46565.41016, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26813.2988 - mse: 799279488.0000 - val_loss: 46565.4102 - val_mse: 2181468416.0000\n",
            "Epoch 40/50\n",
            "60/61 [============================>.] - ETA: 0s - loss: 26779.2363 - mse: 796858240.0000\n",
            "Epoch 40: val_loss improved from 46565.41016 to 46563.96484, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26811.8672 - mse: 799202688.0000 - val_loss: 46563.9648 - val_mse: 2181333760.0000\n",
            "Epoch 41/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26635.6230 - mse: 786590528.0000\n",
            "Epoch 41: val_loss improved from 46563.96484 to 46562.50391, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26810.4102 - mse: 799124544.0000 - val_loss: 46562.5039 - val_mse: 2181197056.0000\n",
            "Epoch 42/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26584.7168 - mse: 783961216.0000\n",
            "Epoch 42: val_loss improved from 46562.50391 to 46561.00000, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26808.9297 - mse: 799044800.0000 - val_loss: 46561.0000 - val_mse: 2181057792.0000\n",
            "Epoch 43/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26807.4219 - mse: 798963904.0000\n",
            "Epoch 43: val_loss improved from 46561.00000 to 46559.48438, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26807.4219 - mse: 798963904.0000 - val_loss: 46559.4844 - val_mse: 2180915968.0000\n",
            "Epoch 44/50\n",
            "59/61 [============================>.] - ETA: 0s - loss: 26627.2578 - mse: 785898624.0000\n",
            "Epoch 44: val_loss improved from 46559.48438 to 46557.94141, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26805.8828 - mse: 798881664.0000 - val_loss: 46557.9414 - val_mse: 2180771840.0000\n",
            "Epoch 45/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26804.3281 - mse: 798798080.0000\n",
            "Epoch 45: val_loss improved from 46557.94141 to 46556.35938, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26804.3281 - mse: 798798080.0000 - val_loss: 46556.3594 - val_mse: 2180625408.0000\n",
            "Epoch 46/50\n",
            "57/61 [===========================>..] - ETA: 0s - loss: 26576.6758 - mse: 783993472.0000\n",
            "Epoch 46: val_loss improved from 46556.35938 to 46554.76953, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26802.7441 - mse: 798713024.0000 - val_loss: 46554.7695 - val_mse: 2180477184.0000\n",
            "Epoch 47/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26687.3574 - mse: 790139264.0000\n",
            "Epoch 47: val_loss improved from 46554.76953 to 46553.14844, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 15ms/step - loss: 26801.1367 - mse: 798627136.0000 - val_loss: 46553.1484 - val_mse: 2180326400.0000\n",
            "Epoch 48/50\n",
            "61/61 [==============================] - ETA: 0s - loss: 26799.5059 - mse: 798539520.0000\n",
            "Epoch 48: val_loss improved from 46553.14844 to 46551.51562, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26799.5059 - mse: 798539520.0000 - val_loss: 46551.5156 - val_mse: 2180173568.0000\n",
            "Epoch 49/50\n",
            "56/61 [==========================>...] - ETA: 0s - loss: 26615.2637 - mse: 784874624.0000\n",
            "Epoch 49: val_loss improved from 46551.51562 to 46549.83984, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26797.8496 - mse: 798450880.0000 - val_loss: 46549.8398 - val_mse: 2180018176.0000\n",
            "Epoch 50/50\n",
            "58/61 [===========================>..] - ETA: 0s - loss: 26733.1836 - mse: 794122880.0000\n",
            "Epoch 50: val_loss improved from 46549.83984 to 46548.14844, saving model to tmp/ckeckpointer.ckpt\n",
            "61/61 [==============================] - 1s 14ms/step - loss: 26796.1738 - mse: 798361024.0000 - val_loss: 46548.1484 - val_mse: 2179860736.0000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.load_weights(filename)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0fKsxRzfzTnr",
        "outputId": "a31e98c5-bc04-401c-cbf3-1efe8fb20df9"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7f7d13559490>"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pred = model.predict(test_data)"
      ],
      "metadata": {
        "id": "5lZAgAZyzUKs"
      },
      "execution_count": 60,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pred.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5sBTGmqrzXnp",
        "outputId": "845b35c1-9d6b-4bd6-bba0-6fbeb154451c"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(474, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(20, 10))\n",
        "plt.plot(np.asarray(y_test)[20:], label='actual')\n",
        "plt.plot(pred, label='prediction')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 327
        },
        "id": "moE5614ki9bY",
        "outputId": "bce6dbd7-a637-4dc6-8214-1c6acf5fcdaa"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}